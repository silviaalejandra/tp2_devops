---

- name: Set TimeZone
  timezone:
    name: '{{ timezone_name }}' #defaults
  become: true
  become_method: sudo

- name: Install Chrony
  apt:
    name: chrony
    state: present
    update_cache: yes
  become: true
  
 #- name: Install cloudinit
 # apt:
 #   name: "cloud-init"
 #   state: present
 #   update_cache: yes
 # become: true

# Para Ubuntu WSL se requiere service
- name: Start Chrony
  ansible.builtin.service:
    state: started
    name: chrony
  #ansible.builtin.systemd:
  #  daemon_reload: no
  #  state: started
  #  name: chronyd
  #  enabled: yes
  become: true
  become_method: sudo

- name: Reset timedate
  #command: timedatectl set-ntp true
  command: hwclock -s #Ubuntu WSL
  become: true
  become_method: sudo

# Agregar o reemplazar hosts
#- name: Try to replace the line
#  replace:
#    dest    : /etc/hosts
#    replace : '{{ item.ip }} '
#    regexp  : '.*{{ item.name }}.*$'
#    backup  : yes
#  with_items: "{{ hosts }}"
#  become: true
#  become_method: sudo
#  register  : checkIfLineIsHere

# If the line not is here, I add it
#- name: Add line
#  lineinfile:
#   state   : present
#   dest    : /etc/hosts
#   line    : '{{ item.ip }} {{ item.name }} {{ item.name_long }}'
#   regexp  : ''
#   insertafter: EOF
#  when: checkIfLineIsHere.changed == false
#  with_items: "{{ hosts }}"
#  become: true
#  become_method: sudo

- name: Update hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item.name }}.*$'
    line: '{{ item.ip }} {{ item.name }} {{ item.name_long }}'
    state: present
    backup: no
  with_items: "{{ hosts }}"
  become: true
  become_method: sudo


#Instalo argo cli para las pruebas
- name: Update hosts
  command: curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
  become: true
  become_method: sudo

- name: Update hosts
  command: chmod +x /usr/local/bin/argocd
  become: true
  become_method: sudo

#- name: copy file and set permissions
#  file:
#    src: /usr/local/bin/argocd
#    mode: a+x