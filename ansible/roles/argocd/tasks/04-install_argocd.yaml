---
#https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
- name: customresouces
  command: 'kubectl apply -n argocd -f /tmp/argocd/01-customresource.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Service Account
  command: 'kubectl apply -n argocd -f /tmp/argocd/02-service_account.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Roles
  command: 'kubectl apply -n argocd -f /tmp/argocd/03-roles.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Config Maps
  command: 'kubectl apply -n argocd -f /tmp/argocd/04-configmap.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Secrets
  command: 'kubectl apply -n argocd -f /tmp/argocd/05-secret.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Services
  command: 'kubectl apply -n argocd -f /tmp/argocd/06-service.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: DEployments
  command: 'kubectl apply -n argocd -f /tmp/argocd/07-deployment.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: statefull set
  command: 'kubectl apply -n argocd -f /tmp/argocd/08-statefullset.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Network
  command: 'kubectl apply -n argocd -f /tmp/argocd/09-network.yaml'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: '{{ result }}'

- name: Obtenemos detalle del namespace creado
  command: 'kubectl get pods --namespace=argocd'
  register: result
  become: true
  become_method: sudo

- debug:
    msg: 'Obtenemos detalle del namespace creado : {{ result }}'

#- name: Obtenemos detalle del namespace creado
#  command: kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
#  register: result
#  become: true
#  become_method: sudo
#
#- debug:
#    msg: 'Obtenemos detalle del namespace creado : {{ result }}'

- name: Generate pass argocd
  command: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
  register: argocd_pass_admin
  become: true
  become_method: sudo

- name: Copy pass to local file
  local_action: copy content="{{ argocd_pass_admin.stdout_lines[0] }}" dest="./argocd_pass_admin"
  become: true
  become_method: sudo